<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤独快乐的时光</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-07-13T11:05:45.400Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2021-7-13学习</title>
    <link href="http://example.com/2021/07/13/daylearn/2021.7.13/"/>
    <id>http://example.com/2021/07/13/daylearn/2021.7.13/</id>
    <published>2021-07-13T10:24:34.471Z</published>
    <updated>2021-07-13T11:05:45.400Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-ts中泛型是什么（回顾）"><a href="#1-ts中泛型是什么（回顾）" class="headerlink" title="1.ts中泛型是什么（回顾）"></a>1.ts中泛型是什么（回顾）</h4><p>复用定义的数据接口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不用泛型写</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">identity</span>(<span class="params">arg: number</span>): <span class="title">number</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//采用泛型，对返回值类型进行约束</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">identity</span>&lt;<span class="title">T</span>&gt;(<span class="params">arg: T</span>): <span class="title">T</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-控制反转"><a href="#2-控制反转" class="headerlink" title="2.控制反转"></a>2.控制反转</h4><p>面向对象的设计原则，降低代码耦合度,常见实现方法是依赖注入和依赖查找</p><p>细节：Class A中用到了Class B的对象b，一般情况下，需要在A的代码中显式的new一个B的对象。采用依赖注入技术之后，A的代码只需要定义一个私有的B对象，不需要直接new来获得这个对象，而是通过相关的容器控制程序来将B对象在外部new出来并注入到A类里的引用中。而具体获取的方法、对象被获取时的状态由配置文件（如XML）来指定。</p><h4 id="3-react-更新机制"><a href="#3-react-更新机制" class="headerlink" title="3.react 更新机制"></a>3.react 更新机制</h4><ul><li><p>1.render阶段:render阶段开始于performSyncWorkOnRoot或performConcurrentWorkOnRoot方法的调用。这取决于本次更新是同步更新还是异步更新。</p></li><li><p>2.commit阶段: commitRoot方法的调用。其中rootFiber会作为传参。</p></li><li><p>3.创建Update对象:ReactDOM.render this.setState  this.forceUpdate useState useReduce都可以触发状态更新</p></li><li><p>4.从fiber到root</p></li><li><p>5.调度更新</p><p><img src="C:\Users\大蟒刀\hexo-blog\source_posts\assents\react状态更新流程.jpg" alt="调度更新"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-ts中泛型是什么（回顾）&quot;&gt;&lt;a href=&quot;#1-ts中泛型是什么（回顾）&quot; class=&quot;headerlink&quot; title=&quot;1.ts中泛型是什么（回顾）&quot;&gt;&lt;/a&gt;1.ts中泛型是什么（回顾）&lt;/h4&gt;&lt;p&gt;复用定义的数据接口&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    <category term="day[learn]" scheme="http://example.com/categories/day-learn/"/>
    
    
    <category term="day[learn]" scheme="http://example.com/tags/day-learn/"/>
    
  </entry>
  
  <entry>
    <title>2021杭州前端市场面试技术考研调研</title>
    <link href="http://example.com/2021/07/13/%E9%9D%A2%E7%BB%8F/%E9%9D%A2%E7%BB%8F%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    <id>http://example.com/2021/07/13/%E9%9D%A2%E7%BB%8F/%E9%9D%A2%E7%BB%8F%E6%8A%80%E6%9C%AF%E6%A0%88/</id>
    <published>2021-07-13T09:27:10.761Z</published>
    <updated>2021-07-13T09:40:14.654Z</updated>
    
    
    
    
    <category term="Interviews" scheme="http://example.com/categories/Interviews/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>第一天的vue</title>
    <link href="http://example.com/2021/07/13/%E7%AC%AC%E4%B8%80%E5%A4%A9%E7%9A%84vue/"/>
    <id>http://example.com/2021/07/13/%E7%AC%AC%E4%B8%80%E5%A4%A9%E7%9A%84vue/</id>
    <published>2021-07-12T16:55:36.818Z</published>
    <updated>2021-07-12T17:08:53.726Z</updated>
    
    <content type="html"><![CDATA[<p>123chonga1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;123chonga1&lt;/p&gt;
</summary>
      
    
    
    
    <category term="vue" scheme="http://example.com/categories/vue/"/>
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/07/13/hello-world/"/>
    <id>http://example.com/2021/07/13/hello-world/</id>
    <published>2021-07-12T16:30:15.067Z</published>
    <updated>2021-07-12T17:02:56.677Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
